- prob1 adding individual and initial disitrubution
- prob2 same








JAMIE:
- Progress bar. So as far as I can see this is just an Eddie issue. I quite like the horizontal progress bars, because it doesn't cause the terminal to scroll so much. So what I've done is add a progress file (located in the "Diagnostic" directory. This does use vertical updating. Perhaps you could check to see if that works with Eddie?

- As an alternative I've now replaced cout with printf(..) and fflush(stdout). Perhaps this has sorted out the problem with the progress bar?

- I've tried to improve the error messages regarding limitations to certain parameters (for example CV should not below 0.01 for numerical reasons). I've also added section 4.2.4 to the manual.

- Now I've removed the error which is generated for {I;}

- I've corrected the "sampler problem" error. It was indeed down to finite precision, but a tricky one to track down.


GRANT:
- Memory usage. So as I mentioned, there is nothing in C++ itself which gets this, but having investigated there are some platform dependent methods to get this info (the code isn't pretty, but it does the job). So now an estimate for memory is printed and also if its likely to run out of memory a warning message is given.

- Code has been added to allow for time integrals to be done on derived quantities. They have the format “\int dt (…)”, where the content goes in the round brackets.  For example, the expression “\int dt ({I})” is mathematically represented by ∫{I}dt. By default, time is integrated over the entire system period, but limits can be placed (e.g. “\int[10,50] dt ({I})” becomes ∫_10^50{I}dt. Time integration can be used to estimate the relative contribution to different routes of transmission. For example, if the force of infection is given by β{I}+ϕ the derived quantity “\int dt (\phi) / \int dt (\beta{I}+\phi)” (mathematically (∫ϕdt)⁄(∫(β{I}+ϕ)dt)) gives the relative contribution of external infections).

- I've added information which helps users to load up data table for parameter values (and prior/reparameterisation etc). There have been examples put in software [?] help files as well as lots of examples of input files I've now put in the manual (also section 2.2.9 has been added).

ME:
- I've corrected a mistake in how effective sample sizes are calculated. Values will now be lower than they were previously. 

- Add filters for individuals (these filters are based on whether individuals at some point visit a specified set of compartments). Also some filter help has been added through the interface help symbols[?])

- Allow for the possibility of derived parameters to depend on parameters which themselves are derived. 

- I've done some general error checking for derived / reparameterised / distributions... I spotted a few mistakes.

- Add a warning on ESS/GR. If this warning is set then don't show timestep warning (because this isn't very reliable for an unmixed system

- Updates to the manual related to above.










- output percent
- \omega^ia,ta





- prob1: parameter a not being estimated correctly
- Mac post-sim not working





Write to Aiden



TO DO §
X(7) Checks on data tables
X(13) Check error messages when changing BICI file
(4) Look at doing posterior simulation from all examples
(1) Go through all the examples and check they are working... look at diagnostic information

(2) Look at diagnostics for kernels
(5) Update manual

X(3) Get period working - move multiple events 


x(6) Error for poptrans data

X(8) joining proposals
(9) example giving age variation using period

LATER
NEW Adding a categorical fixed effect 

(11) Capture recapture example
X(12) Not alive comp measurement

X(14) add grid view
X(15) empty parameter
(20) Get a version 0.4 on github

Changes made for v0.4:
- New diagnostic information which can be found on the "Diagnostics" menu item when inference is performed: (1) This shows expected number of transition from model vs actual number, (2) Distributions are probed looking at the uniformness of the cumulative probability distributions for evidence of biased transitions (see Max Lau paper), (3) MCMC diagnostic information.
- Updates to the manual to help improve the explanations.
- Incorporation of "period" transitions, which allow for a transition event after a certain time period. E.g. this can be used to implement age progression within individuals.
- THe possiblity for parameter "factors" has been added to the model. This provides a good way for adding in categorical fixed effect into models.
- Several new proposals have to added (moving mutiple linked events, moving all events for the same individual, leave/sink proposals.
- Corrections made to add/rem individual proposals (such that they work when some individuals are observed in the system).
- Significant improvements have been made on error messages in both the visual interface and direct from BICI script. These will help user to understand mistakes in the model
- Added example M4.5 to illustrate "period" transition
- Improvements in how loading is displayed in both interface ("Initialising..", "Running..." messages with percentages) and on the terminal.
- Lots of bug finding. 

There have been some minor changes to the syntax for BICI-script, so you might find that ".bici" files which previous loaded up now give error messages. The current manual contains all the BICI command. If you have difficulities let me know and I can help!



(4) comp data seems to be shifted to the left
(5) move multiple events 
(6) local with ie 
(7) test different event proposals in a number of scenarios
(8) inidividual level transition in manual
(9) FLICKERING INPUT



- T=0 not shown on density maps right
- B8 post sim crashes
- C4 ppc 20-200 time 
- C5 ooc "f not in model"

- INLA BREW


Need to sort out joining
sort out "to do2"



B5 joining of proposals

D8 to do
E6 to do
E7


§
	if(style && inter.printing) w *= print_line_factor;
		
BICI achieves Bayesian inference by means of drawing samples from the posterior distribution using a widely applied technique known as “Markov chain Monte Carlo” (MCMC). Unlike many other statistical techniques (such as maximum likelihood), MCMC does not simply follow a predetermined algorithm and produce a final end r

esult. Instead, it successively generates samples that progressively improve the accuracy with which the posterior is approximated. MCMC is continuously run until sufficient precision. 

Currently working on making farm-based models faster
- At the moment simulation is slow so working on improving that


- Using Mareks disease status
- cutting off first passage
- ppc
- time dependency
- .

make_comp_name(

(1) // TO DO Need a faster way  -  fast way to reduce multinomial
(2) // TO DO EQN CHECK


- Need to sort out local event changes (to do sections)


- FARM model with known infection times not working correctly
- file saved in temp



- direct message from software
- get all examples done
- finish off MFA
- PAS
- when initial "Cannot change pop fixed." error message








- Get Marek's individual sampling working

- Get individual sampler sorted

- For transmission trees the rate must be linearly expressed in terms of populations.

- matrix comp plot


- siumulation slow when doing inference



a×η(t)+β×Σ_l' ((1/(1+pow(ubound(d_l,l'|40)/r|α))) {I,l'})

took around 1 min to do

(0) a = a for reparaemterisation

(1) Loading symbol when paraemter spline being viewed
(2) paraemter loading symbol pausing
(3) When matrix is too big then do not output results (maximum 
e.g. let toobig = false; if(num_element(par) > ELEMENT_MAX) toobig = true;
(4) Get AI working with ||l,l'|| approach



model.init_param_needed = true;


loading dirchlet prior
start_add_initial_population();
import_data_table_command(cname);
 get_prior_from_file(pri)
Copy simulated parameters



TO DO
Sort out prior
sort out map
do compartment maps
menu icon
sum using prime
a greek letter must be selected

DONE
chaging name for species, comp etc...
- ctl c v to copy values and priors
